name: instagram_scraper.yml
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      date:
        description: Date for the scraper to run
        required: true
        type: string

jobs:
  define_matrix:
    runs-on: ubuntu-latest
    outputs:
      accounts: ${{ steps.list_accounts.outputs.accounts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Load cargo cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
          key: ${{ runner.os }}-cargo-

      - name: Set file timestamps
        run: |
          git ls-files -z | xargs -0 -n1 git log -1 --pretty=format:%cd --date=format:'%Y%m%d%H%M.%S' -- $1 | while read time file; do
            touch -t "$time" "$file"
          done

      - name: list monitored accounts
        id: list_accounts
        run: cargo run --profile relwithdebinfo --bin instagram_scraper >> $GITHUB_OUTPUT

  get_account_stats:
    needs: define_matrix
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        account: ${{ fromJson(needs.define_matrix.outputs.accounts) }}
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: get account status
        uses: docker://ghcr.io/yayoimizuha/instagram-scraper:latest
        with:
          entrypoint: /bin/bash
          args: -c "mkdir -p ~/.cache && mv /ms-playwright ~/.cache/ms-playwright && deno --allow-all $GITHUB_WORKSPACE/instagram_follower.ts ${{ matrix.account }}"

      - name: check user data
        run: |  
          cat query.json
          cat web_profile_info.json
