
name: Daily get UP-FRONT & Hello!Project YouTube view count

env:
#  DEBUG: NO
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  TZ: 'Asia/Tokyo'
  RUST_BACKTRACE: 'full'
  TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
  TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
  TWITTER_APP_KEY: ${{ secrets.TWITTER_APP_KEY }}
  TWITTER_APP_SECRET: ${{ secrets.TWITTER_APP_SECRET }}
  GH_TOKEN: ${{ github.token }}

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 23 * * *'

jobs:
  compile:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - name: Generate UUID
        id: uuid
        run:
          echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cargo cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
          key: ${{ runner.os }}-cargo-

      - name: Compile all binaries
        run: cargo build --profile relwithdebinfo

      - name: Cargo cache
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
          key: ${{ runner.os }}-cargo-${{ steps.uuid.outputs.uuid }}
  youtube:
    needs:
      - compile
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cargo cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
          key: ${{ runner.os }}-cargo-

      - name: extract zstd
        run: |
          zstd -dk -f data.duckdb.zst

      - name: Getting YouTube ViewCounts
        run: ./target/relwithdebinfo/youtube-viewcount-logger-rust

      - name: Register date
        run: date +'%Y-%m-%d %H:%M:%S' > date.txt

      - name: Compress data
        run: zstd data.duckdb --ultra -22 -fk

      - name: Commit changes
        run: |
          git lfs install
          git lfs track data.duckdb.zst
          git lfs track
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git config --global core.quotepath off
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git status
          git add data.duckdb.zst date.txt -f
          git commit -m "Daily update @ $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin HEAD:${GITHUB_REF} -f

  instagram:
    needs:
      - youtube
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cargo cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
          key: ${{ runner.os }}-cargo-

      - name: extract zstd
        run: |
          zstd -dk -f misc.duckdb.zst

      - name: Getting Instagram status
        run: ./target/relwithdebinfo/instagram_scraper

      - name: Compress data
        run: zstd misc.duckdb --ultra -22 -fk

      - name: Commit changes
        run: |
          git lfs install
          git lfs track misc.duckdb.zst
          git lfs track
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git config --global core.quotepath off
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git status
          git add misc.duckdb.zst -f
          git commit -m "Daily Instagram update @ $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin HEAD:${GITHUB_REF} -f

  tweet:
    needs: youtube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Typst
        run: |
          wget `gh release view --repo typst/typst --json assets --jq '.assets[] | select((.name | contains("x86_64")) and (.name | contains("linux"))) | .url'`
          tar xvf `gh release view --repo typst/typst --json assets --jq '.assets[] | select((.name | contains("x86_64")) and (.name | contains("linux"))) | .name'`
          echo $PWD/`echo $(gh release view --repo typst/typst --json assets --jq '.assets[] | select((.name | contains("x86_64")) and (.name | contains("linux"))) | .name') | cut -d '.' -f1` >> "$GITHUB_PATH"

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: extract zstd
        run: |
          zstd -dk -f data.duckdb.zst

      - name: Processing tweet
        run: deno --allow-all render_graph.ts